name: $(Date:yyyyMMdd)$(Rev:r)

stages:

- stage: Build
  jobs:
  - job: BuildTestAndPack
    pool:
      vmImage: 'Ubuntu 16.04'

    variables:
      buildConfiguration: 'Release'
      versionMajor: 1
      versionMinor: 1
      versionPatch: 5

    steps:
    - powershell: |
        $mainVersion = "$(versionMajor).$(versionMinor).$(versionPatch)"
        $commitId = "$(Build.SourceVersion)".Substring(0,7)
        Write-Host "##vso[task.setvariable variable=mainVersion]$mainVersion"
        Write-Host "##vso[task.setvariable variable=semanticVersion]$mainVersion+$(Build.BuildNumber).$commitId"
        Write-Host "##vso[task.setvariable variable=assemblyVersion]$(versionMajor).0.0"
      name: SetVariables

    - powershell: |
        Write-Host 'mainVersion: $(mainVersion)'
        Write-Host 'semanticVersion: $(semanticVersion)'
        Write-Host 'assemblyVersion: $(assemblyVersion)'
      name: PrintVariables

    - powershell: |
        dotnet build --configuration $(buildConfiguration)
        dotnet test --configuration $(buildConfiguration) --logger trx
        dotnet pack --configuration Release /p:AssemblyVersion='$(assemblyVersion)' /p:FileVersion='$(mainVersion)' /p:InformationalVersion='$(semanticVersion)' /p:Version='$(mainVersion)' --output '$(Build.ArtifactStagingDirectory)'
      name: BuildTestAndPack

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'

    - task: PublishBuildArtifacts@1

- stage: ReleaseNugetPackage
  jobs:
  - deployment: ReleaseNugetPackage
    environment: NuGet
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NuGetToolInstaller@1
            displayName: 'Install NuGet'
            
          - script: nuget push '$(Pipeline.Workspace)/**/*.nupkg' -s 'https://api.nuget.org/v3/index.json' -ApiKey '$(nuget.apikey)' -SkipDuplicate -NoSymbols
            displayName: 'Push to NuGet.org'